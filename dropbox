#!/usr/bin/python

# try "dropbox" or "dropbox help" for help
#
# Copyright 2008 Dropbox
# Michael Haimes / Rian Hunter

from __future__ import with_statement

import sys
import optparse
import socket
import os
import time
import locale
import platform
import tarfile
import threading
import urllib
import subprocess
import fcntl
import errno
from contextlib import closing

WARNING = "In order to use Dropbox, you must download the proprietary daemon."

DOWNLOADING = "Downloading Dropbox... %d%%"
UNPACKING = "Unpacking Dropbox... %d%%"

PARENT_DIR = os.path.expanduser("~")
DROPBOXD_PATH = "%s/.dropbox-dist/dropboxd" % PARENT_DIR

def plat():
    if sys.platform.lower().startswith('linux'):
        arch = platform.machine()
        if (arch[0] == 'i' and
            arch[1].isdigit() and
            arch[2:3] == '86'):
            plat = "x86"
        elif arch == 'x86_64':
            plat = arch
        else:
            FatalVisibleError("Platform not supported")
        return "lnx.%s" % plat
    else:
        FatalVisibleError("Platform not supported")

class DownloadState(object):
    def __init__(self):
        try:
            self.file = urllib.urlopen("http://www.getdropbox.com/download?plat=%s" % plat())
        except IOError:
            FatalVisibleError("Trouble connecting to Dropbox servers. Maybe your internet connection is down, or you need to set your http_proxy environment variable.")
            
        fcntl.fcntl(self.file, fcntl.F_SETFL, os.O_NONBLOCK)
        
        self.size = int(self.file.info()['content-length'])
        self.progress = 0

        self.local_path = "%s/dropbox.tar.gz" % PARENT_DIR
        self.local_file = open(self.local_path, 'wb')

    def copy_data(self):
        chunks = []
        def flush():
            while chunks:
                self.local_file.write(chunks.pop())
        while True:
            try:
                chunk = os.read(self.file.fileno(), 4096)
                self.progress += len(chunk)
                chunks.insert(0, chunk)
                yield True
                if self.progress == self.size:
                    break
            except OSError, e:
                if hasattr(e, 'errno') and e.errno == errno.EAGAIN:
                    # nothing left to read
                    flush()
                    yield False
                else:
                    raise
        flush()
        self.file.close()

    def unpack(self):
        self.local_file.close()
        archive = tarfile.open(self.local_path, 'r:gz')
        total_members = len(archive.getmembers())
        for i, member in enumerate(archive.getmembers()):
            archive.extract(member, PARENT_DIR)
            yield member.name, i, total_members
        archive.close()
        os.remove(self.local_path)

    def cancel(self):
        if not self.local_file.closed:
            self.local_file.close()
        if os.path.exists(self.local_path):
            os.remove(self.local_path)

#### SERIALIZED IMAGES ####
def load_serialized_images():
    import gtk
    box_logo_pixbuf = gtk.gdk.pixbuf_new_from_data(
        '\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x04\x00Y\x9ch\x00Y\x9ci\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Z\x9c[\x00X\x9bt\x00\\\x9e\x0c\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x16\x00W\x9a\x99\x06`\xa1\xff\x03^\xa0\xfe\x00Y\x9cv\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Z\x9ca\x01]\x9e\xf6\x08b\xa3\xff\x00W\x9a\xaa\x00\\\x9e"\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Y\x9cc\x00W\x99\xe2*z\xb6\xff|\xba\xe6\xffn\xae\xdc\xff\x0cb\xa3\xff\x00W\x9a\x90\x00\\\x9e\x01\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Y\x9b{\x05^\x9f\xffQ\x9e\xd6\xffr\xb7\xea\xff0\x81\xbc\xff\x00X\x9b\xed\x00X\x9bt\x00\\\x9e\x07\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00[\x9d7\x00V\x99\xbe\x11g\xa7\xffV\x9e\xd3\xff\x8e\xc8\xf4\xff\x93\xcb\xf4\xff\x9c\xd0\xf6\xff\x81\xbb\xe4\xff\x17j\xa9\xff\x00V\x99\xac\x00\\\x9e\x0e\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x05\x00W\x9a\x98\x0cd\xa4\xffY\xa6\xdf\xff}\xc2\xf6\xff\x7f\xc1\xf4\xff\x86\xc6\xf5\xff_\xa5\xd9\xff\x18l\xab\xff\x00U\x99\xcc\x00Z\x9dF\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x11\x00W\x9a\x8c\x03\\\x9e\xfb9\x88\xc3\xffy\xbc\xed\xff\x8b\xc9\xf6\xff\x8a\xc5\xf1\xff\x8e\xc7\xf1\xff\x93\xca\xf1\xff\xa1\xd1\xf5\xff\x8f\xc3\xea\xff%u\xaf\xff\x00U\x99\xca\x00\\\x9e"\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x15\x00W\x99\xb8\x13j\xaa\xff^\xac\xe5\xffw\xc0\xf6\xffv\xbc\xf1\xff{\xbe\xf1\xff\x7f\xc1\xf1\xff\x8c\xc9\xf6\xff\x88\xc4\xf0\xffK\x93\xc9\xff\x08_\xa0\xff\x00V\x9a\x9c\x00\\\x9e\x1a\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Z\x9cZ\x00W\x99\xdc\x1es\xb2\xffa\xab\xe2\xff\x82\xc4\xf6\xff\x82\xc2\xf3\xff\x84\xc3\xf1\xff\x89\xc4\xf1\xff\x8e\xc7\xf1\xff\x93\xca\xf1\xff\x99\xcc\xf1\xff\xa3\xd2\xf4\xff\x9f\xce\xf0\xff9\x83\xba\xff\x00T\x99\xe2\x00[\x9d:\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e*\x00V\x99\xd4\x1et\xb4\xffc\xb3\xed\xffq\xbd\xf5\xffq\xba\xf1\xffv\xbc\xf1\xff{\xbe\xf1\xff\x7f\xc1\xf1\xff\x84\xc3\xf1\xff\x8c\xc7\xf2\xff\x98\xce\xf7\xff\x81\xbb\xe6\xff0}\xb7\xff\x00V\x9a\xe7\x00X\x9bj\x00\\\x9e\x03\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00[\x9d/\x00V\x99\xb6\x0cd\xa5\xffD\x95\xd0\xffr\xbc\xf3\xffz\xc0\xf4\xffz\xbe\xf1\xff\x7f\xc0\xf1\xff\x84\xc3\xf1\xff\x89\xc4\xf1\xff\x8e\xc7\xf1\xff\x93\xca\xf1\xff\x99\xcc\xf1\xff\x9d\xcd\xf1\xff\xa6\xd3\xf3\xff\xab\xd6\xf4\xffP\x94\xc5\xff\x00W\x9a\xf2\x00Z\x9dM\x00\\\x9e\x00\x00\\\x9e\x00\x00[\x9d<\x00W\x99\xe8)\x7f\xbf\xffe\xb5\xf2\xffk\xba\xf4\xffl\xb8\xf1\xffq\xba\xf1\xffv\xbc\xf1\xff{\xbe\xf1\xff\x7f\xc1\xf1\xff\x84\xc3\xf1\xff\x8a\xc5\xf1\xff\x8f\xc7\xf1\xff\x99\xce\xf4\xff\x9f\xd0\xf4\xffi\xa7\xd5\xff\x16i\xa8\xff\x00T\x99\xc4\x00Z\x9d;\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x0c\x00X\x9a\x80\x01[\x9d\xf5,\x81\xc0\xffa\xb0\xeb\xffr\xbe\xf6\xffq\xbb\xf2\xffu\xbc\xf1\xffz\xbe\xf1\xff\x7f\xc0\xf1\xff\x84\xc3\xf1\xff\x89\xc4\xf1\xff\x8e\xc7\xf1\xff\x93\xca\xf1\xff\x99\xcc\xf1\xff\x9d\xcd\xf1\xff\xa2\xd0\xf1\xff\xa8\xd4\xf2\xff\xb4\xdb\xf6\xffg\xa4\xcf\xff\x01Y\x9c\xfc\x00Y\x9cs\x00[\x9df\x00Y\x9b\xf54\x8a\xca\xfff\xb7\xf5\xffe\xb5\xf2\xffh\xb7\xf1\xffl\xb8\xf1\xffq\xba\xf1\xffv\xbc\xf1\xff{\xbe\xf1\xff\x7f\xc1\xf1\xff\x84\xc3\xf1\xff\x8a\xc5\xf1\xff\x8f\xc7\xf1\xff\x94\xca\xf1\xff\x9b\xcd\xf1\xff\xa7\xd5\xf6\xff\x9b\xcb\xee\xffN\x92\xc4\xff\x04\\\x9e\xfb\x00V\x9a\x8f\x00\\\x9e\x14\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Z\x9cR\x00W\x99\xd6\x16m\xae\xffL\x9f\xde\xffi\xb9\xf6\xffi\xb8\xf3\xffk\xb8\xf1\xffp\xba\xf1\xffu\xbc\xf1\xffz\xbe\xf1\xff\x7f\xc0\xf1\xff\x84\xc3\xf1\xff\x89\xc4\xf1\xff\x8e\xc7\xf1\xff\x93\xca\xf1\xff\x99\xcc\xf1\xff\x9d\xcd\xf1\xff\xa2\xd0\xf1\xff\xa6\xd2\xf1\xff\xab\xd4\xf1\xff\xb9\xdc\xf6\xffz\xb0\xd7\xff\x07]\x9f\xff\x00Y\x9c\xff;\x92\xd2\xffc\xb6\xf6\xffb\xb4\xf2\xffd\xb4\xf1\xffh\xb7\xf1\xffl\xb8\xf1\xffq\xba\xf1\xffv\xbc\xf1\xff{\xbe\xf1\xff\x7f\xc1\xf1\xff\x84\xc3\xf1\xff\x8a\xc5\xf1\xff\x8f\xc7\xf1\xff\x94\xca\xf1\xff\x9a\xcc\xf1\xff\x9e\xce\xf1\xff\xa5\xd2\xf3\xff\xb1\xda\xf7\xff\x8a\xbd\xe1\xff,x\xb1\xff\x00U\x99\xe0\x00Y\x9c_\x00\\\x9e\x01\x00[\x9d\x95\x0cf\xa7\xff7\x8e\xce\xff^\xb2\xf1\xffd\xb6\xf5\xffc\xb4\xf1\xffg\xb6\xf1\xffk\xb8\xf1\xffp\xba\xf1\xffu\xbc\xf1\xffz\xbe\xf1\xff\x7f\xc0\xf1\xff\x84\xc3\xf1\xff\x89\xc4\xf1\xff\x8e\xc7\xf1\xff\x93\xca\xf1\xff\x99\xcc\xf1\xff\x9d\xcd\xf1\xff\xa2\xd0\xf1\xff\xa6\xd2\xf1\xff\xaa\xd4\xf1\xff\xae\xd5\xf1\xff\xb9\xdc\xf6\xff\x94\xc0\xe0\xffX\xa4\xde\xffY\xb2\xf5\xff[\xb0\xf1\xffa\xb3\xf1\xffd\xb4\xf1\xffh\xb7\xf1\xffl\xb8\xf1\xffq\xba\xf1\xffv\xbc\xf1\xff{\xbe\xf1\xff\x7f\xc1\xf1\xff\x84\xc3\xf1\xff\x8a\xc5\xf1\xff\x8f\xc7\xf1\xff\x94\xca\xf1\xff\x9a\xcc\xf1\xff\x9e\xce\xf1\xff\xa2\xd0\xf1\xff\xa7\xd2\xf1\xff\xb2\xd9\xf5\xff\xb2\xd7\xf3\xffn\xa7\xd1\xff\x1bl\xa9\xff\x00Z\x9d\xa6\x00Y\x9b\xda#|\xbd\xffb\xb7\xf7\xff`\xb4\xf4\xff`\xb2\xf1\xffc\xb4\xf1\xffg\xb6\xf1\xffk\xb8\xf1\xffp\xba\xf1\xffu\xbc\xf1\xffz\xbe\xf1\xff\x7f\xc0\xf1\xff\x84\xc3\xf1\xff\x89\xc4\xf1\xff\x8e\xc7\xf1\xff\x93\xca\xf1\xff\x99\xcc\xf1\xff\x9d\xcd\xf1\xff\xa2\xd0\xf1\xff\xa6\xd2\xf1\xff\xa7\xd2\xf1\xff\xae\xd4\xf1\xff\xc9\xe3\xf6\xff\xe9\xf5\xfe\xff\xcd\xea\xfe\xff\x93\xcb\xf6\xff_\xb2\xf1\xff[\xb0\xf0\xffd\xb4\xf1\xffh\xb7\xf1\xffl\xb8\xf1\xffq\xba\xf1\xffv\xbc\xf1\xff{\xbe\xf1\xff\x7f\xc1\xf1\xff\x84\xc3\xf1\xff\x8a\xc5\xf1\xff\x8f\xc7\xf1\xff\x94\xca\xf1\xff\x9a\xcc\xf1\xff\x9e\xce\xf1\xff\xa2\xd0\xf1\xff\xa7\xd2\xf1\xff\xa9\xd4\xf1\xff\xb5\xd9\xf4\xff\xc1\xe2\xf9\xffN\x92\xc2\xff\x00W\x9b\xe6\x00\\\x9e1\x00X\x9a\xd8\x1cu\xb5\xffX\xad\xec\xffd\xb6\xf5\xffc\xb4\xf1\xffg\xb6\xf1\xffk\xb8\xf1\xffp\xba\xf1\xffu\xbc\xf1\xffz\xbe\xf1\xff\x7f\xc0\xf1\xff\x84\xc3\xf1\xff\x89\xc4\xf1\xff\x8e\xc7\xf1\xff\x93\xca\xf1\xff\x99\xcc\xf1\xff\x9d\xcd\xf1\xff\xa1\xcf\xf1\xff\xa3\xd0\xf0\xff\xb6\xd9\xf3\xff\xd7\xeb\xf9\xff\xe8\xf3\xfc\xff\xe5\xf2\xfb\xff\xcb\xe8\xfb\xff\xcf\xe8\xfc\xff\xb9\xde\xfa\xff~\xc1\xf4\xff^\xb1\xf1\xffe\xb5\xf1\xffl\xb8\xf1\xffq\xba\xf1\xffv\xbc\xf1\xff{\xbe\xf1\xff\x7f\xc1\xf1\xff\x84\xc3\xf1\xff\x8a\xc5\xf1\xff\x8f\xc7\xf1\xff\x94\xca\xf1\xff\x9a\xcc\xf1\xff\x9e\xce\xf1\xff\xa2\xd0\xf1\xff\xa7\xd2\xf1\xff\xb2\xd9\xf5\xff\xaa\xd2\xef\xff=\x85\xba\xff\x00V\x9a\xe4\x00\\\x9e@\x00\\\x9e\x00\x00\\\x9e\x16\x00W\x99\xb6\x10h\xaa\xffR\xa6\xe4\xffj\xb9\xf6\xffg\xb6\xf1\xffk\xb8\xf1\xffp\xba\xf1\xffu\xbc\xf1\xffz\xbe\xf1\xff\x7f\xc0\xf1\xff\x84\xc3\xf1\xff\x89\xc4\xf1\xff\x8e\xc7\xf1\xff\x93\xca\xf1\xff\x99\xcc\xf1\xff\x9a\xcb\xf0\xff\xa5\xd1\xf2\xff\xc6\xe2\xf7\xff\xe1\xf1\xfb\xff\xe4\xf2\xfb\xff\xe5\xf1\xfb\xff\xe4\xf2\xfb\xff\xca\xe7\xfb\xff\xc8\xe5\xfb\xff\xcf\xe8\xfb\xff\xd1\xe9\xfb\xff\xaa\xd6\xf8\xffr\xbc\xf2\xffe\xb5\xf1\xffp\xba\xf1\xffv\xbc\xf1\xff{\xbe\xf1\xff\x7f\xc1\xf1\xff\x84\xc3\xf1\xff\x8a\xc5\xf1\xff\x8f\xc7\xf1\xff\x94\xca\xf1\xff\x9a\xcc\xf1\xff\x9e\xce\xf1\xff\xa2\xd0\xf1\xff\xb1\xd9\xf6\xff\x97\xc6\xe8\xff#s\xae\xff\x00T\x99\xc6\x00\\\x9e"\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x03\x00X\x9a\x8f\ta\xa3\xffJ\x9c\xda\xffn\xbd\xf6\xffl\xb9\xf2\xffp\xba\xf1\xffu\xbc\xf1\xffz\xbe\xf1\xff\x7f\xc0\xf1\xff\x84\xc3\xf1\xff\x89\xc4\xf1\xff\x8e\xc7\xf1\xff\x91\xc9\xf1\xff\x96\xca\xf1\xff\xb1\xd8\xf5\xff\xd5\xea\xfa\xff\xe1\xf0\xfc\xff\xe1\xf0\xfb\xff\xe2\xf1\xfb\xff\xe5\xf1\xfb\xff\xe4\xf2\xfb\xff\xca\xe7\xfb\xff\xc8\xe5\xfb\xff\xcb\xe6\xfb\xff\xce\xe7\xfb\xff\xd7\xec\xfc\xff\xcd\xe7\xfb\xff\x98\xcd\xf5\xffn\xb9\xf1\xffq\xba\xf1\xff{\xbe\xf1\xff\x7f\xc1\xf1\xff\x84\xc3\xf1\xff\x8a\xc5\xf1\xff\x8f\xc7\xf1\xff\x94\xca\xf1\xff\x9a\xcc\xf1\xff\x9e\xce\xf1\xff\xad\xd8\xf7\xff\x82\xb8\xdf\xff\x14g\xa6\xff\x00V\x9a\xa2\x00\\\x9e\x0b\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Y\x9bm\x02[\x9d\xfc<\x90\xcc\xffq\xbd\xf5\xffr\xbc\xf3\xffu\xbc\xf1\xffz\xbe\xf1\xff\x7f\xc0\xf1\xff\x84\xc3\xf1\xff\x88\xc4\xf1\xff\x8a\xc5\xf1\xff\x9b\xce\xf3\xff\xc2\xe1\xf8\xff\xda\xee\xfb\xff\xdc\xee\xfb\xff\xdd\xee\xfb\xff\xe0\xf0\xfb\xff\xe2\xf1\xfb\xff\xe5\xf1\xfb\xff\xe4\xf2\xfb\xff\xca\xe7\xfb\xff\xc8\xe5\xfb\xff\xcb\xe6\xfb\xff\xcd\xe7\xfb\xff\xd0\xe9\xfb\xff\xd5\xeb\xfb\xff\xdc\xee\xfc\xff\xc0\xe0\xf9\xff\x89\xc6\xf3\xffu\xbb\xf0\xff}\xc0\xf1\xff\x84\xc3\xf1\xff\x8a\xc5\xf1\xff\x8f\xc7\xf1\xff\x94\xca\xf1\xff\x9c\xce\xf2\xff\xa7\xd5\xf6\xffe\xa5\xd2\xff\x06]\x9f\xff\x00X\x9b\x80\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00[\x9dI\x00W\x9a\xe8,\x80\xbe\xffp\xba\xf1\xffy\xbf\xf4\xffz\xbe\xf1\xff\x7f\xc0\xf1\xff\x81\xc1\xf1\xff\x8a\xc5\xf1\xff\xad\xd7\xf6\xff\xd0\xe9\xfb\xff\xd8\xec\xfc\xff\xd7\xec\xfb\xff\xda\xed\xfb\xff\xdd\xee\xfb\xff\xe0\xf0\xfb\xff\xe2\xf1\xfb\xff\xe5\xf1\xfb\xff\xe4\xf2\xfb\xff\xca\xe7\xfb\xff\xc8\xe5\xfb\xff\xcb\xe6\xfb\xff\xcd\xe7\xfb\xff\xd0\xe9\xfb\xff\xd3\xea\xfb\xff\xd6\xeb\xfb\xff\xde\xef\xfc\xff\xdd\xee\xfb\xff\xb2\xda\xf7\xff\x84\xc3\xf2\xff\x7f\xc0\xf0\xff\x8a\xc5\xf1\xff\x8f\xc7\xf1\xff\x98\xcd\xf3\xff\x9d\xcf\xf3\xffI\x90\xc4\xff\x00W\x9a\xf3\x00Z\x9c[\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\'\x00V\x98\xcc\x1ft\xb3\xffn\xb6\xec\xff~\xc2\xf4\xff{\xbe\xf0\xff\x93\xcb\xf4\xff\xc0\xe0\xf9\xff\xd2\xea\xfc\xff\xd2\xea\xfb\xff\xd4\xea\xfb\xff\xd7\xec\xfb\xff\xda\xed\xfb\xff\xdd\xee\xfb\xff\xe0\xf0\xfb\xff\xe2\xf1\xfb\xff\xe5\xf1\xfb\xff\xe4\xf2\xfb\xff\xca\xe7\xfb\xff\xc8\xe5\xfb\xff\xcb\xe6\xfb\xff\xcd\xe7\xfb\xff\xd0\xe9\xfb\xff\xd3\xea\xfb\xff\xd6\xeb\xfb\xff\xd9\xec\xfb\xff\xdd\xee\xfb\xff\xe5\xf3\xfc\xff\xd5\xeb\xfa\xff\xa1\xd1\xf4\xff\x86\xc3\xf0\xff\x92\xca\xf4\xff\x91\xc8\xef\xff2\x80\xb8\xff\x00U\x98\xdb\x00[\x9d7\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\t\x00W\x99\xd5\x0ee\xa6\xffj\xaf\xe3\xff\xb4\xdc\xfa\xff\xcd\xe8\xfb\xff\xcf\xe7\xfb\xff\xce\xe8\xfb\xff\xd1\xe9\xfb\xff\xd4\xea\xfb\xff\xd7\xec\xfb\xff\xda\xed\xfb\xff\xdd\xee\xfb\xff\xe0\xf0\xfb\xff\xe2\xf1\xfb\xff\xe5\xf1\xfb\xff\xe4\xf2\xfb\xff\xca\xe7\xfb\xff\xc8\xe5\xfb\xff\xcb\xe6\xfb\xff\xcd\xe7\xfb\xff\xd0\xe9\xfb\xff\xd3\xea\xfb\xff\xd6\xeb\xfb\xff\xd9\xec\xfb\xff\xdc\xed\xfb\xff\xde\xf0\xfb\xff\xe4\xf2\xfb\xff\xe8\xf3\xfc\xff\xd1\xe8\xfa\xff\x89\xc0\xe8\xff\x18l\xaa\xff\x00U\x99\xe6\x00\\\x9e\x17\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e%\x00V\x99\xe0!u\xb2\xffW\xa9\xe6\xff\x89\xc6\xf6\xff\xc9\xe5\xfb\xff\xd2\xe9\xfc\xff\xce\xe8\xfb\xff\xd1\xe9\xfb\xff\xd4\xea\xfb\xff\xd7\xec\xfb\xff\xda\xed\xfb\xff\xdd\xee\xfb\xff\xe0\xf0\xfb\xff\xe2\xf1\xfb\xff\xe5\xf1\xfb\xff\xe4\xf2\xfb\xff\xca\xe7\xfb\xff\xc8\xe5\xfb\xff\xcb\xe6\xfb\xff\xcd\xe7\xfb\xff\xd0\xe9\xfb\xff\xd3\xea\xfb\xff\xd6\xeb\xfb\xff\xd9\xec\xfb\xff\xdc\xed\xfb\xff\xde\xf0\xfb\xff\xe6\xf3\xfc\xff\xe8\xf3\xfc\xff\xb9\xdb\xf6\xff\x7f\xbc\xea\xff1\x7f\xb8\xff\x00V\x99\xed\x00[\x9d8\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00[\x9dK\x00W\x99\xe90\x83\xc0\xff{\xc0\xf2\xff^\xb2\xf1\xff1\x99\xeb\xff[\xae\xef\xff\xad\xd7\xf7\xff\xd6\xec\xfc\xff\xd4\xeb\xfb\xff\xd4\xea\xfb\xff\xd7\xec\xfb\xff\xda\xed\xfb\xff\xdd\xee\xfb\xff\xe0\xf0\xfb\xff\xe2\xf1\xfb\xff\xe5\xf1\xfb\xff\xe4\xf2\xfb\xff\xca\xe7\xfb\xff\xc8\xe5\xfb\xff\xcb\xe6\xfb\xff\xcd\xe7\xfb\xff\xd0\xe9\xfb\xff\xd3\xea\xfb\xff\xd6\xeb\xfb\xff\xd9\xec\xfb\xff\xdf\xee\xfb\xff\xe8\xf5\xfc\xff\xcb\xe5\xf8\xff~\xbe\xee\xffW\xa9\xe9\xff{\xbd\xef\xff\x9d\xd0\xf5\xffL\x93\xc6\xff\x00W\x9a\xf4\x00Y\x9c`\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Y\x9ct\x02[\x9d\xfc>\x91\xcd\xffu\xbf\xf5\xff{\xc0\xf2\xff]\xb0\xef\xff:\x9d\xec\xff>\x9f\xeb\xffJ\xa5\xec\xff\x84\xc3\xf3\xff\xc8\xe5\xfa\xff\xdb\xee\xfc\xff\xd8\xec\xfb\xff\xda\xed\xfb\xff\xdd\xee\xfb\xff\xe0\xf0\xfb\xff\xe2\xf1\xfb\xff\xe5\xf1\xfb\xff\xe4\xf2\xfb\xff\xca\xe7\xfb\xff\xc8\xe5\xfb\xff\xcb\xe6\xfb\xff\xcd\xe7\xfb\xff\xd0\xe9\xfb\xff\xd3\xea\xfb\xff\xd7\xeb\xfb\xff\xe2\xf1\xfc\xff\xd8\xec\xfb\xff\x92\xc9\xf2\xffS\xa8\xea\xffR\xa7\xe9\xff^\xad\xea\xffz\xbc\xee\xff\x99\xcc\xf2\xff\xa3\xd3\xf6\xfff\xa5\xd3\xff\x07^\xa0\xff\x00W\x9b\x8a\x00\\\x9e\x02\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x05\x00X\x9a\x9a\nc\xa4\xffM\x9f\xdb\xffr\xbe\xf6\xffq\xbb\xf2\xffy\xbe\xf1\xff]\xb0\xef\xff:\x9d\xec\xffD\xa2\xec\xffK\xa5\xec\xffM\xa6\xeb\xffe\xb2\xed\xff\xa8\xd4\xf5\xff\xda\xed\xfc\xff\xdf\xef\xfc\xff\xdd\xee\xfb\xff\xe0\xf0\xfb\xff\xe2\xf1\xfb\xff\xe5\xf1\xfb\xff\xe4\xf2\xfb\xff\xca\xe7\xfb\xff\xc8\xe5\xfb\xff\xcb\xe6\xfb\xff\xcd\xe7\xfb\xff\xd0\xe9\xfb\xff\xd8\xed\xfc\xff\xdd\xef\xfc\xff\xa7\xd4\xf6\xffU\xaa\xed\xff=\x9e\xe9\xffN\xa5\xea\xffY\xab\xea\xff^\xad\xea\xffz\xbc\xee\xff\x97\xcb\xf1\xff\x9a\xcc\xf1\xff\xa8\xd5\xf7\xff\x82\xb9\xe0\xff\x17j\xa8\xff\x00V\x99\xae\x00\\\x9e\x0f\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x1b\x00V\x99\xbb\x15m\xae\xffX\xaa\xe7\xffm\xbb\xf6\xffk\xb8\xf1\xffp\xba\xf1\xffy\xbe\xf1\xff]\xb0\xef\xff:\x9d\xec\xffD\xa2\xec\xffL\xa6\xec\xffT\xaa\xec\xffY\xac\xec\xff]\xae\xeb\xff\x87\xc3\xf0\xff\xc9\xe4\xf9\xff\xe4\xf1\xfc\xff\xe2\xf1\xfb\xff\xe2\xf1\xfb\xff\xe5\xf1\xfb\xff\xe4\xf2\xfb\xff\xca\xe7\xfb\xff\xc8\xe5\xfb\xff\xcb\xe6\xfb\xff\xcf\xe8\xfb\xff\xdb\xef\xfc\xff\xc1\xe0\xf9\xffg\xb4\xf0\xff/\x97\xe9\xff8\x9c\xe9\xffG\xa3\xea\xffP\xa6\xea\xffY\xab\xea\xff^\xad\xea\xffz\xbc\xee\xff\x97\xcb\xf1\xff\x9a\xcc\xf1\xff\x9e\xce\xf1\xff\xab\xd6\xf5\xff\x9a\xca\xeb\xff,y\xb2\xff\x00T\x98\xcd\x00\\\x9e)\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00[\x9d:\x00W\x99\xdd\x1fw\xb8\xff]\xb0\xee\xffg\xb8\xf5\xffg\xb6\xf1\xffk\xb8\xf1\xffp\xba\xf1\xffy\xbe\xf1\xff]\xb0\xef\xff:\x9d\xec\xffD\xa2\xec\xffL\xa6\xec\xffT\xaa\xec\xff\\\xad\xec\xffc\xb1\xec\xfff\xb2\xeb\xffu\xb9\xec\xff\xa9\xd3\xf3\xff\xdc\xee\xfb\xff\xe8\xf4\xfc\xff\xe4\xf1\xfb\xff\xe4\xf2\xfb\xff\xca\xe7\xfb\xff\xc6\xe4\xfb\xff\xd4\xeb\xfc\xff\xcd\xe7\xfb\xff\x81\xc1\xf4\xff/\x96\xeb\xff#\x92\xe9\xff5\x9b\xea\xff>\x9f\xea\xffG\xa3\xea\xffP\xa6\xea\xffY\xab\xea\xff^\xad\xea\xffz\xbc\xee\xff\x97\xcb\xf1\xff\x9a\xcc\xf1\xff\x9e\xce\xf1\xff\xa2\xd0\xf1\xff\xad\xd6\xf4\xff\xa9\xd3\xf1\xffC\x89\xbd\xff\x00U\x99\xea\x00Z\x9dL\x00\\\x9e\x00\x00[\x9dY\x03]\x9e\xf5.\x86\xc6\xff`\xb4\xf4\xffb\xb4\xf3\xffc\xb4\xf1\xffg\xb6\xf1\xffk\xb8\xf1\xffp\xba\xf1\xffy\xbe\xf1\xff]\xb0\xef\xff:\x9d\xec\xffD\xa2\xec\xffL\xa6\xec\xffT\xaa\xec\xff\\\xad\xec\xffc\xb1\xec\xffl\xb5\xec\xffs\xb8\xec\xffv\xb9\xeb\xff\x8e\xc5\xee\xff\xc4\xe1\xf6\xff\xed\xf6\xfc\xff\xfb\xfd\xfe\xff\xf8\xfc\xff\xff\xe2\xf2\xfd\xff\x9c\xce\xf7\xff:\x9d\xed\xff\x13\x89\xe9\xff"\x90\xea\xff-\x97\xea\xff6\x9b\xea\xff>\x9f\xea\xffG\xa3\xea\xffP\xa6\xea\xffY\xab\xea\xff^\xad\xea\xffz\xbc\xee\xff\x97\xcb\xf1\xff\x9a\xcc\xf1\xff\x9e\xce\xf1\xff\xa2\xd0\xf1\xff\xa7\xd2\xf1\xff\xae\xd6\xf3\xff\xb7\xdb\xf5\xffb\xa0\xcc\xff\t_\xa0\xfd\x00[\x9dn\x00X\x9a\xe2%~\xbf\xffc\xb9\xf9\xff`\xb4\xf5\xff`\xb2\xf1\xffc\xb4\xf1\xffg\xb6\xf1\xffk\xb8\xf1\xffp\xba\xf1\xffy\xbe\xf1\xff]\xb0\xef\xff:\x9d\xec\xffD\xa2\xec\xffL\xa6\xec\xffT\xaa\xec\xff\\\xad\xec\xffc\xb1\xec\xffl\xb5\xec\xfft\xb9\xec\xff|\xbc\xec\xff\x80\xbd\xeb\xff\x89\xc2\xec\xff\xb8\xdb\xf3\xff\xf3\xf8\xfc\xff\xe9\xf4\xfd\xffu\xbb\xf3\xff\x12\x89\xea\xff\x10\x88\xe9\xff\x1e\x8e\xea\xff&\x92\xea\xff-\x97\xea\xff6\x9b\xea\xff>\x9f\xea\xffG\xa3\xea\xffP\xa6\xea\xffY\xab\xea\xff^\xad\xea\xffz\xbc\xee\xff\x97\xcb\xf1\xff\x9a\xcc\xf1\xff\x9e\xce\xf1\xff\xa2\xd0\xf1\xff\xa7\xd2\xf1\xff\xa9\xd4\xf1\xff\xb5\xd9\xf4\xff\xc5\xe5\xfb\xffU\x96\xc5\xff\x00W\x9b\xf1\x00\\\x9e`\x03]\x9e\xed"z\xbb\xffU\xa9\xe9\xfff\xb8\xf6\xffd\xb5\xf2\xffg\xb6\xf1\xffk\xb8\xf1\xffp\xba\xf1\xffy\xbe\xf1\xff]\xb0\xef\xff:\x9d\xec\xffD\xa2\xec\xffL\xa6\xec\xffT\xaa\xec\xff\\\xad\xec\xffc\xb1\xec\xffl\xb5\xec\xfft\xb8\xec\xff\x7f\xbc\xec\xff\x8b\xc3\xed\xff\x93\xc6\xed\xff\x91\xc6\xec\xff\xaf\xd5\xf1\xffL\xa7\xf0\xff\x02\x81\xe9\xff\x19\x8c\xea\xff \x90\xea\xff!\x90\xea\xff%\x92\xea\xff-\x97\xea\xff6\x9b\xea\xff>\x9f\xea\xffG\xa3\xea\xffP\xa6\xea\xffY\xab\xea\xff^\xad\xea\xffz\xbc\xee\xff\x97\xcb\xf1\xff\x9a\xcc\xf1\xff\x9e\xce\xf1\xff\xa2\xd0\xf1\xff\xa8\xd3\xf1\xff\xb5\xdb\xf6\xff\xa2\xcd\xec\xffH\x8c\xbf\xff\x07^\x9f\xf6\x00[\x9dt\x00\\\x9e\x00\x00\\\x9e#\x00W\x99\xaa\ta\xa3\xff=\x92\xd1\xffg\xb7\xf4\xffk\xb9\xf4\xffk\xb8\xf1\xffp\xba\xf1\xffy\xbe\xf1\xff]\xb0\xef\xff:\x9d\xec\xffD\xa2\xec\xffL\xa6\xec\xffT\xaa\xec\xff\\\xad\xec\xffb\xb1\xec\xffl\xb5\xec\xff{\xbc\xed\xff\x87\xc1\xed\xff\x8d\xc4\xed\xff\x90\xc5\xed\xff\xae\xd5\xf1\xff\xc6\xe2\xf7\xffd\xb5\xf2\xff7\x9d\xee\xff\x18\x8c\xea\xff\x1f\x8f\xea\xff(\x93\xea\xff+\x96\xea\xff.\x97\xea\xff6\x9b\xea\xff>\x9f\xea\xffG\xa3\xea\xffP\xa6\xea\xffY\xab\xea\xff^\xad\xea\xffz\xbc\xee\xff\x97\xcb\xf1\xff\x9a\xcc\xf1\xff\x9e\xce\xf1\xff\xa8\xd4\xf4\xff\xae\xd8\xf5\xffr\xab\xd5\xff\x13g\xa5\xff\x00T\x99\xba\x00[\x9d/\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Z\x9cT\x00X\x9a\xde\x1eu\xb4\xffX\xa9\xe4\xffr\xbe\xf6\xffq\xbb\xf2\xffy\xbe\xf1\xff]\xb0\xef\xff:\x9d\xec\xffD\xa2\xec\xffL\xa6\xec\xffT\xaa\xec\xff[\xad\xec\xffh\xb4\xec\xffw\xba\xed\xff\x81\xbe\xed\xff\x85\xc1\xed\xff\x8b\xc3\xed\xff\xac\xd4\xf2\xff\xcf\xe6\xf8\xff\xc8\xe3\xf7\xfff\xb5\xf2\xff_\xb2\xf1\xffG\xa5\xef\xff \x90\xea\xff%\x92\xea\xff.\x98\xea\xff5\x9b\xea\xff9\x9c\xea\xff>\x9f\xea\xffG\xa3\xea\xffP\xa6\xea\xffY\xab\xea\xff^\xad\xea\xffz\xbc\xee\xff\x97\xcb\xf1\xff\x9b\xcd\xf2\xff\xa8\xd5\xf7\xff\x90\xc3\xe7\xff8\x82\xb9\xff\x00W\x9a\xe9\x00X\x9ce\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x16\x00W\x9a\x97\x05^\xa0\xff9\x8c\xc9\xffo\xba\xf1\xff~\xc3\xf5\xff]\xb0\xef\xff:\x9d\xec\xffD\xa2\xec\xffK\xa6\xec\xffV\xab\xec\xffe\xb2\xed\xffq\xb9\xed\xffy\xbb\xed\xff~\xbd\xed\xff\x86\xc2\xed\xff\xae\xd6\xf3\xff\xc9\xe4\xf8\xff\xcd\xe5\xf7\xff\xc7\xe2\xf7\xffe\xb5\xf2\xff[\xb0\xf1\xffh\xb7\xf1\xffV\xad\xef\xff+\x96\xeb\xff*\x95\xea\xff5\x9b\xea\xff>\x9e\xea\xffD\xa1\xea\xffI\xa4\xea\xffP\xa6\xea\xffY\xab\xea\xff^\xad\xea\xffz\xbc\xee\xff\x9d\xd0\xf5\xff\x9c\xce\xf3\xff\\\x9d\xce\xff\x0bb\xa2\xff\x00U\x99\xa9\x00\\\x9e!\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00[\x9dC\x00V\x99\xcd\x18n\xad\xff`\xaa\xdf\xff`\xb3\xf2\xff8\x9c\xec\xffD\xa2\xec\xffS\xaa\xed\xffb\xb1\xed\xffj\xb4\xed\xffp\xb8\xed\xffv\xb9\xed\xff\x84\xc1\xee\xff\xaf\xd7\xf5\xff\xc5\xe2\xf8\xff\xc6\xe2\xf7\xff\xcc\xe5\xf7\xff\xc7\xe2\xf7\xffe\xb5\xf2\xff[\xb0\xf1\xffc\xb4\xf1\xffo\xba\xf1\xffg\xb5\xf0\xff9\x9d\xeb\xff1\x99\xea\xff>\x9e\xea\xffF\xa2\xea\xffN\xa7\xea\xffT\xa8\xea\xffY\xab\xea\xff\\\xac\xea\xff\x7f\xc0\xf1\xff\x7f\xba\xe4\xff(w\xb2\xff\x00U\x99\xdb\x00Z\x9cS\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x07\x00X\x9b\x7f\x02Z\x9b\xf76\x8e\xcf\xffH\xa7\xf1\xffM\xa6\xec\xff\\\xae\xed\xffb\xb1\xed\xffi\xb4\xed\xffm\xb7\xec\xff\x82\xc0\xef\xff\xb0\xd8\xf6\xff\xbf\xdf\xf8\xff\xc1\xe0\xf7\xff\xc6\xe2\xf7\xff\xcc\xe5\xf7\xff\xc7\xe2\xf7\xffe\xb5\xf2\xff[\xb0\xf1\xffc\xb4\xf1\xffj\xb7\xf1\xffu\xbd\xf1\xffv\xbc\xf1\xffI\xa5\xec\xff9\x9c\xea\xffF\xa2\xea\xffN\xa7\xea\xffW\xaa\xea\xffZ\xac\xea\xffj\xb5\xee\xffY\xa0\xd4\xff\x06]\x9e\xfb\x00V\x9a\x92\x00\\\x9e\x11\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00T\x98\xb19\x89\xc2\xff\x91\xce\xfb\xffk\xb6\xf1\xffX\xad\xed\xff`\xb0\xed\xffe\xb2\xec\xff\x7f\xc0\xf0\xff\xae\xd8\xf7\xff\xba\xdd\xf7\xff\xbc\xde\xf7\xff\xc1\xe0\xf7\xff\xc6\xe2\xf7\xff\xcc\xe5\xf7\xff\xc7\xe2\xf7\xffe\xb5\xf2\xff[\xb0\xf1\xffc\xb4\xf1\xffj\xb7\xf1\xffq\xbb\xf1\xff}\xbf\xf1\xff\x82\xc2\xf1\xffZ\xac\xed\xffB\xa0\xea\xffL\xa6\xea\xffR\xa8\xea\xffr\xb8\xec\xff\xb0\xd8\xf6\xffZ\x99\xc6\xff\x00R\x98\xc5\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00U\x99\xacB\x8f\xc6\xff\xa2\xd7\xff\xff\x9a\xcf\xf8\xff\x85\xc4\xf4\xffg\xb4\xee\xff\x80\xc0\xf1\xff\xab\xd7\xf7\xff\xb2\xda\xf7\xff\xb7\xdc\xf7\xff\xbc\xde\xf7\xff\xc1\xe0\xf7\xff\xc6\xe2\xf7\xff\xcc\xe5\xf7\xff\xc7\xe2\xf7\xffe\xb5\xf2\xff[\xb0\xf1\xffc\xb4\xf1\xffj\xb7\xf1\xffq\xbb\xf1\xffz\xbe\xf1\xff\x84\xc3\xf1\xff\x8e\xc7\xf1\xffl\xb6\xee\xffS\xa9\xea\xff\x82\xc0\xee\xff\xad\xd5\xf1\xff\xc6\xe4\xfa\xff_\x9d\xca\xff\x00T\x99\xbf\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Y\x9c\x86\x1dp\xae\xff{\xba\xe9\xff\xa1\xd5\xfd\xff\xa1\xd3\xf9\xff\x9c\xd0\xf7\xff\xa5\xd4\xf7\xff\xab\xd7\xf7\xff\xb0\xd9\xf7\xff\xb7\xdc\xf7\xff\xbc\xde\xf7\xff\xc1\xe0\xf7\xff\xc6\xe2\xf7\xff\xcc\xe5\xf7\xff\xc7\xe2\xf7\xffe\xb5\xf2\xff[\xb0\xf1\xffc\xb4\xf1\xffj\xb7\xf1\xffq\xbb\xf1\xffz\xbe\xf1\xff\x82\xc2\xf1\xff\x8c\xc5\xf1\xff\x96\xcb\xf1\xff\x97\xca\xf0\xff\xab\xd5\xf3\xff\xb6\xdb\xf6\xff\x87\xb9\xde\xff\x1fo\xab\xff\x00Y\x9c\x8c\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x11\x00X\x9b\x97\x05]\x9f\xfeL\x94\xca\xff\x99\xce\xf6\xff\xa8\xd9\xfc\xff\xa6\xd4\xf7\xff\xaa\xd6\xf7\xff\xb0\xd9\xf7\xff\xb7\xdc\xf7\xff\xbc\xde\xf7\xff\xc1\xe0\xf7\xff\xc6\xe2\xf7\xff\xcc\xe5\xf7\xff\xc7\xe2\xf7\xffe\xb5\xf2\xff[\xb0\xf1\xffc\xb4\xf1\xffj\xb7\xf1\xffq\xbb\xf1\xffz\xbe\xf1\xff\x82\xc2\xf1\xff\x8b\xc5\xf1\xff\x95\xcb\xf1\xff\xa7\xd5\xf6\xff\x9b\xcb\xed\xffH\x8d\xc0\xff\x00Z\x9d\xf7\x00X\x9b\x85\x00\\\x9e\x0b\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Z\x9dA\x00U\x98\xca\x1ep\xad\xffw\xb4\xe0\xff\xae\xdb\xfc\xff\xae\xd9\xf9\xff\xb0\xd9\xf7\xff\xb7\xdc\xf7\xff\xbc\xde\xf7\xff\xc1\xe0\xf7\xff\xc6\xe2\xf7\xff\xcc\xe5\xf7\xff\xc7\xe2\xf7\xffe\xb5\xf2\xff[\xb0\xf1\xffc\xb4\xf1\xffj\xb7\xf1\xffq\xbb\xf1\xffz\xbe\xf1\xff\x82\xc2\xf1\xff\x90\xc9\xf4\xff\x9a\xcf\xf5\xffk\xa9\xd7\xff\x16j\xa8\xff\x00T\x99\xbb\x00[\x9d2\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x06\x00W\x9a}\x00Y\x9c\xf5B\x8a\xc0\xff\x9d\xcd\xf0\xff\xbb\xe1\xfc\xff\xb8\xdd\xf8\xff\xbc\xde\xf7\xff\xc1\xe0\xf7\xff\xc6\xe2\xf7\xff\xcc\xe5\xf7\xff\xc7\xe2\xf7\xffe\xb5\xf2\xff[\xb0\xf1\xffc\xb4\xf1\xffj\xb7\xf1\xffq\xbb\xf1\xff{\xbf\xf2\xff\x8a\xc8\xf6\xff{\xb9\xe7\xff2\x7f\xb9\xff\x00W\x9a\xeb\x00X\x9bm\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00[\x9d-\x00U\x99\xb6\x11e\xa5\xffp\xab\xd6\xff\xbd\xe0\xfa\xff\xc3\xe3\xfa\xff\xc1\xe0\xf7\xff\xc6\xe2\xf7\xff\xcc\xe5\xf7\xff\xc7\xe2\xf7\xffe\xb5\xf2\xff[\xb0\xf1\xffc\xb4\xf1\xffj\xb7\xf1\xffv\xbf\xf5\xff}\xc1\xf3\xffM\x97\xce\xff\ta\xa2\xff\x00V\x99\xa5\x00\\\x9e \x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Y\x9c^\x00V\x9a\xe46\x80\xb7\xff\x9f\xc9\xe9\xff\xcd\xe9\xfd\xff\xc9\xe4\xf8\xff\xcc\xe5\xf7\xff\xc7\xe2\xf7\xffe\xb5\xf2\xff[\xb0\xf1\xffe\xb6\xf2\xffq\xbe\xf6\xff]\xa9\xe1\xff t\xb2\xff\x00V\x99\xd9\x00Z\x9cM\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x1b\x00U\x99\x9e\x08^\xa0\xffb\x9e\xca\xff\xc2\xe0\xf6\xff\xd7\xec\xfc\xff\xc7\xe2\xf7\xffe\xb5\xf2\xff`\xb5\xf6\xffa\xb2\xee\xff4\x87\xc5\xff\x03\\\x9e\xfb\x00W\x9a\x8e\x00\\\x9e\x11\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00Z\x9dF\x00S\x98\xd0$r\xac\xff\x9b\xc3\xe2\xff\xd3\xeb\xfd\xffl\xbb\xf7\xffC\x9a\xda\xff\x11i\xa9\xff\x00V\x98\xc3\x00[\x9d9\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\t\x00W\x9b~\x00Z\x9c\xf8P\x93\xc3\xff/\x83\xbf\xff\x00Y\x9c\xf1\x00Y\x9bp\x00\\\x9e\x03\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00[\x9d2\x00U\x9a\xb5\x00X\x9a\xb6\x00\\\x9e)\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\x00\\\x9e\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00\xff\xff\xff\x00',
        gtk.gdk.COLORSPACE_RGB,
        True,
        8,
        48,
        48,
        192)
    globals().update(locals())

#### END SERIALIZED IMAGES ####

if "DISPLAY" in os.environ:
    def download():
        import gtk
        import gobject

        load_serialized_images()

        global FatalVisibleError
        def FatalVisibleError(s):
            error = gtk.MessageDialog(parent = None,
                                      flags = gtk.DIALOG_MODAL,
                                      type = gtk.MESSAGE_ERROR,
                                      buttons = gtk.BUTTONS_OK,
                                      message_format = s)
            error.set_title("Error")
            error.run()
            gtk.main_quit()
            sys.exit(-1)

        def gtk_flush_events():
            while gtk.events_pending():
                gtk.main_iteration()

        class DownloadDialog(gtk.Dialog):
            def handle_cancel(self, button):
                if self.watch:
                    gobject.source_remove(self.watch)
                if self.download:
                    self.download.cancel()
                gtk.main_quit()

            def handle_ok(self, button):
                # begin download
                self.ok.hide()
                self.download = DownloadState()
                self.one_chunk = self.download.copy_data()
                self.watch = gobject.io_add_watch(self.download.file,
                                                  gobject.IO_IN | 
                                                  gobject.IO_PRI |
                                                  gobject.IO_ERR |
                                                  gobject.IO_HUP,
                                                  self.handle_data_waiting)
                self.label.hide()
                self.progress.show()

            def update_progress(self, text, fraction):
                self.progress.set_text(text % int(fraction*100))
                self.progress.set_fraction(fraction)
                gtk_flush_events()

            def handle_data_waiting(self, fd, condition):
                if condition == gobject.IO_HUP:
                    raise FatalVisibleError("Connection to server unexpectedly closed.")
                elif condition == gobject.IO_ERR:
                    raise FatalVisibleError("Unexpected error occurred with download.")
                try:
                    while self.one_chunk.next():
                        self.update_progress(DOWNLOADING, float(self.download.progress)/self.download.size)
                except StopIteration:
                    self.update_progress(DOWNLOADING, 1.0)
                    self.unpack_dropbox()
                    return False
                else:
                    self.update_progress(DOWNLOADING, float(self.download.progress)/self.download.size)
                    return True

            def unpack_dropbox(self):
                one_member = self.download.unpack()
                try:
                    while True:
                        name, i, total = one_member.next()
                        self.update_progress(UNPACKING, float(i)/total)
                except StopIteration:
                    self.update_progress(UNPACKING, 1.0)
                    gtk.main_quit()

            def __init__(self):
                super(DownloadDialog, self).__init__(parent = None,
                                                     title = "Dropbox")

                self.download = None
                self.watch = None

                self.ok = ok = gtk.Button(stock=gtk.STOCK_OK)
                ok.connect('clicked', self.handle_ok)
                self.action_area.add(ok)
                ok.show()

                cancel = gtk.Button(stock=gtk.STOCK_CANCEL)
                cancel.connect('clicked', self.handle_cancel)
                self.action_area.add(cancel)
                cancel.show()

                self.box_logo = gtk.image_new_from_pixbuf(box_logo_pixbuf)
                self.box_logo.show()

                self.progress = gtk.ProgressBar()
                self.progress.set_property('width-request', 300)

                self.label = gtk.Label(WARNING)
                self.label.set_line_wrap(True)
                self.label.set_property('width-request', 300)
                self.label.show()

                self.hbox = gtk.HBox(spacing=10)
                self.hbox.set_property('border-width',10)
                self.hbox.pack_start(self.box_logo, False, False)
                self.hbox.pack_start(self.label, False, False)
                self.hbox.pack_start(self.progress, False, False)
                self.hbox.show()

                self.vbox.add(self.hbox)
                self.set_resizable(False)

        dialog = DownloadDialog()
        dialog.show()
        gtk.main()
else:
    def download():
        global FatalVisibleError
        def FatalVisibleError(s):
            print >>sys.stderr, "Error: %s" % s
            sys.exit(-1)

        ESC = "\x1b"
        save = ESC+"7"
        unsave = ESC+"8"
        clear = ESC+"[2J"

        erase_to_start = ESC+"[1K"

        write = sys.stdout.write
        flush = sys.stdout.flush


        last_progress = [None, None]
        def setprogress(text, frac):
            if last_progress == [text, frac]:
                return
            write(erase_to_start)
            write(unsave)
            write(text % int(100*frac))
            flush()
            last_progress[0], last_progress[1] = text, frac

        write(clear)
        write(save)

        while True:
            write(WARNING)
            write(" [y/n] ")
            flush()
            text = raw_input()
            if text.lower().startswith("y"):
                break
            elif text.lower().startswith("n"):
                return
            else:
                print "Sorry, I didn't understand that. Please type yes or no."

        download = DownloadState()
        one_chunk = download.copy_data()

        try:    
            while True:
                one_chunk.next()
                setprogress(DOWNLOADING, float(download.progress)/download.size)
        except StopIteration:
            setprogress(DOWNLOADING, 1.0)
            print ""
            write(save)

        one_member = download.unpack()

        try:
            while True:
                name, i, total = one_member.next()
                setprogress(UNPACKING, float(i)/total)
        except StopIteration:
            setprogress(UNPACKING, 1.0)

        print ""



class DropboxCommand(object):
    class CouldntConnectError(Exception): pass
    class EOFError(Exception): pass

    def __init__(self):
        self.s = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
        try:
            self.s.connect(os.path.expanduser(u'~/.dropbox/command_socket'))
        except socket.error, e:
            raise DropboxCommand.CouldntConnectError()
        self.f = self.s.makefile("r+", 4096)

    def close(self):
        self.f.close()
        self.s.close()

    def __readline(self):
        toret = self.f.readline().decode('utf8').rstrip(u"\n")
        if toret == '':
            raise DropboxCommand.EOFError()
        else:
            return toret

    # atttribute doesn't exist, i know what you want
    def send_command(self, name, args):
        self.f.write(name.encode('utf8'))
        self.f.write(u"\n".encode('utf8'))
        self.f.writelines((u"\t".join([k] + (list(v)
                                             if hasattr(v, '__iter__') else
                                             [v])) + u"\n").encode('utf8')
                          for k,v in args.iteritems())
        self.f.write(u"done\n".encode('utf8'))
                
        self.f.flush()

        ok = self.__readline() == u"ok"
        if ok:
            toret = {}
            for i in range(21):
                if i == 20:
                    raise Exception(u"close this connection!")

                line = self.__readline()
                if line == u"done":
                    break
                        
                argval = line.split(u"\t")
                toret[argval[0]] = argval[1:]

            return toret
        else:
            problems = []
            for i in range(21):
                if i == 20:
                    raise Exception(u"close this connection!")

                line = self.__readline()
                if line == u"done":
                    break
                        
                problems.append(line)
                    
            raise Exception(u"\n".join(problems))

    # this is the hotness, auto marshalling
    def __getattr__(self, name):
        try:
            return super(DropboxCommand, self).__getattr__(name)
        except:
            def __spec_command(**kw):
                return self.send_command(unicode(name), kw)
            self.__setattr__(name, __spec_command)
            return __spec_command

def command(meth):
    assert meth.__doc__, "All commands need properly formatted docstrings (even %r!!)" % meth
    meth.command = True
    return meth

def start_dropbox():
    db_path = os.path.expanduser(u"~/.dropbox-dist/dropboxd").encode(sys.getfilesystemencoding())
    if os.access(db_path, os.X_OK):
        subprocess.Popen([db_path], preexec_fn=os.setsid, cwd=os.path.expanduser("~"))
        sys.stdout.flush()
        print u"Starting Dropbox...",
        for i in range(5):
            try:
                dc = DropboxCommand()
                print u"Done!"
                dc.close()
                return
            except:
                print u".",
                
            # back off from connect for a while
            time.sleep(0.1)

        print u"Starting Dropbox Failed!"
        return True
    else:
        return False

@command
def filestatus(args):
    u"""filestatus
"""
    pass

@command
def ls(args):
    u"""ls
"""
    pass

@command
def publicurl(args):
    u"""publicurl
"""
    pass

@command
def status(args):
    u"""status
"""
    pass

@command
def stop(args):
    u"""stop dropboxd
dropbox stop

Stops the dropbox daemon.
"""
    # first check if dropbox is already running
    try:
        with closing(DropboxCommand()) as dc:
            dc.tray_action_hard_exit()
    except DropboxCommand.CouldntConnectError, e:
        print u"Dropbox isn't running!"
    except DropboxCommand.EOFError:
        print u"Dropbox daemon stopped."        

@command
def start(argv):
    u"""start dropboxd
dropbox start [-i]
    
Starts the dropbox daemon, dropboxd. If dropboxd is already running, this will
do nothing.

options:
  -i --install  auto install dropboxd if not available on the system
"""

    should_install = "-i" in argv or "--install" in argv
    
    # first check if dropbox is already running
    try:
        with closing(DropboxCommand()) as dc:
            print u"Dropbox is already running!"
            return
    except:
        pass
    
    if not start_dropbox():
        if not should_install:
            print u"The Dropbox daemon is not installed! Run with -i to install the daemon"
            return

        # install dropbox!!!
        download()
        start_dropbox()

@command
def help(argv):
    u"""provide help
dropbox help [COMMAND]

With no arguments, print a list of commands and a short description of each.

With a command, print descriptive help on how to use the command. (Like right now!!)
"""
    if not argv:
        return usage(argv)
    for command in commands:
        if command == argv[0]:
            print commands[command].__doc__.split('\n', 1)[1]
            return
    print >>sys.stderr, "unknown command '%s'" % argv[0]

def usage(argv):
    print u"Dropbox command-line interface\n"
    print u"commands:\n"
    out = []
    for command in commands:
        out.append((command, commands[command].__doc__.splitlines()[0]))
    spacing = max(len(o[0])+3 for o in out)
    for o in out:
        print " %-*s%s" % (spacing, o[0], o[1])

def main(argv):
    global commands
    commands = {}
    for name,meth in globals().iteritems():
        if getattr(globals()[name], "command", False):
            commands[name] = meth

    # now we need to find out if one of the commands are in the
    # argv list, and if so split the list at the point to
    # separate the argv list at that point
    cut = None
    for i in range(len(argv)):
        if argv[i] in commands:
            cut = i
            break
    
    if cut == None:
        usage(argv)
        return

    # lol no options for now
    globaloptionparser = optparse.OptionParser()
    globaloptionparser.parse_args(argv[0:i])

    # now dispatch and run
    return commands[argv[i]](argv[i+1:])

if __name__ == "__main__":
    main(sys.argv)
